import { Request, Response, Express } from 'express'
import swaggerUi from 'swagger-ui-express'
import swaggerJSDoc from 'swagger-jsdoc'
import fs from 'fs'
import path from 'path'
import yaml from 'js-yaml'
import { SwaggerGenerator } from './swagger-generator'

const packageJson = JSON.parse(fs.readFileSync(path.join(__dirname, '../../package.json'), 'utf-8'))

// API URL configuration
const API_URL = process.env.API_URL || '/api'

// Import models for auto-generation
import User from '../apps/user/model'
import EmailTemplate from '../apps/emailTemplate/model'
import File from '../apps/fileModule/model'

// Old YAML system removed - now using automatic generation + JSDoc

// Generate automatic CRUD documentation
const models = {
  User: { Model: User.Model },
  EmailTemplate: { Model: EmailTemplate.Model },
  File: { Model: File.Model },
}

const autoGenerated = SwaggerGenerator.generateFromModels(models, '/api')

// JSDoc options for custom documentation
const jsdocOptions = {
  definition: {
    openapi: '3.0.0',
    info: {
      title: packageJson.name,
      version: packageJson.version,
      description: packageJson.description,
    },
  },
  apis: [path.join(__dirname, '../docs/*.swagger.ts'), path.join(__dirname, '../apps/**/*.ts')],
}

// Generate JSDoc documentation
const customDocs = swaggerJSDoc(jsdocOptions)

// Merge all documentation
const swaggerSpec = {
  openapi: '3.0.0',
  info: {
    title: packageJson.name,
    version: packageJson.version,
    description: packageJson.description,
    license: {
      name: packageJson.license,
    },
    contact: {
      email: 'info@bursayazilimevi.com',
      url: 'https://bursayazilimevi.com',
    },
  },
  servers: [
    {
      url: process.env.SERVER_URL || '/api',
      description:
        process.env.NODE_ENV === 'production' ? 'Production Server' : 'Development server',
    },
  ],
  components: {
    securitySchemes: {
      bearerAuth: {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
      },
    },
    schemas: {
      ...autoGenerated.schemas,
      ...(customDocs as any).components?.schemas,
    },
  },
  security: [
    {
      bearerAuth: [],
    },
  ],
  paths: {
    ...autoGenerated.paths,
    ...(customDocs as any).paths,
  },
}

export const setupSwagger = (app: Express) => {
  app.use(
    `${API_URL}/documents/swagger`,
    swaggerUi.serve,
    swaggerUi.setup(swaggerSpec, {
      customSiteTitle: `${packageJson.name} Documentation`,
      swaggerOptions: {
        filter: true,
        displayRequestDuration: true,
        persistAuthorization: true,
      },
    }),
  )

  app.get(`${API_URL}/documents/json`, (req: Request, res: Response) => {
    res.setHeader('Content-Type', 'application/json')
    res.send(swaggerSpec)
  })
}
